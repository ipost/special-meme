<!DOCTYPE html>
<html lang="en" ng-app="pw">
  <head>
    <meta charset="UTF-8">
    <title>Password Manager</title>
    <link rel="stylesheet" type="text/css" href="style.css">
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js"></script>
  </head>
  <body ng-controller="PwCtrl">
    <div id="title">Password Management</div>
    <div ng-show="credentialsList" id="credentials">
      <div id="column-headers">
        <div>Identity</div>
        <div>Secret</div>
        <div>Note</div>
      </div>
      <form name="form" id="credentials-list">
        <div ng-show="shouldShow(creds)" ng-form="form_{{$index}}" class="credential-set" ng-repeat="creds in credentialsList">
          <input type="text" ng-disabled="creds.removed" class="identity-field data-field" ng-model="creds.identity">
          <input type="text" ng-disabled="creds.removed" class="secret-field data-field" ng-model="creds.secret">
          <input type="text" ng-disabled="creds.removed" class="note-field data-field" ng-model="creds.note">
          <button class="remove-btn" ng-disabled="creds.removed" ng-click="remove($index)">Remove</button>
          <button class="undo-btn" ng-disabled="!creds.removed && form.form_{{$index}}.$pristine" ng-click="reset($index)">Undo</button>
        </div>
      </form>
      <div>
        <input id="search-box" class="data-field" type="text" name="filter" ng-model="filter" placeholder="Search...">
        <button id="add-new-btn" ng-click="addNew()">+</a>
      </div>
    </div>
    <div id="controls">
      <div id="unsaved-changes" ng-show="unsavedChanges">You have unsaved changes</div>
      <div ng-show="saving">Saving</div>
      <div ng-show="notification && notification.length > 0" ng-bind="notification"/></div>
      <div ng-show="!credentialsList">
        <form ng-submit="loadData()">
          <label>Username: <input type="text" class="data-field" name="id" ng-model="id" placeholder="identity"></label>
          <label>Password: <input type="password" class="data-field" name="password" ng-model="password" placeholder="master password"></label>
          <input type="submit" class="hidden" />
        </form>
      </div>
      <div id="buttons">
        <button class="main-btn" id="load-btn" ng-show="!credentialsList" ng-click="loadData()">Load Data</button>
        <button class="main-btn" id="create-btn" ng-show="!credentialsList" ng-click="create()">Create</button>
        <button class="main-btn" id="save-btn" ng-show="credentialsList" ng-click="save()">Save</button>
      </div>
    </div>
    <script type="text/javascript">
      var app = angular.module('pw', []);
      app.controller('PwCtrl', function($scope, $http) {
        $scope.unsavedChanges = false;

        $scope.loadData = function () {
          $http.post('/pw/open', {
            password: $scope.password,
            id: $scope.id
          }).then(function(response) {
            $scope.credentialsList = angular.copy(response.data);
            $scope.canonicalData = angular.copy(response.data);
          }, function(response) {
            $scope.notify(response.data.error);
          });
        };

        $scope.create = function () {
          $http.post('/pw/create', {
            password: $scope.password,
            id: $scope.id
          }).then(function(response) {
            $scope.credentialsList = angular.copy(response.data);
            $scope.canonicalData = angular.copy(response.data);
          }, function(response) {
            $scope.notify(response.data.error);
          });
        };

        $scope.addNew = function () {
          $scope.credentialsList.push({identity: '', secret: '', note: ''});
        };

        $scope.save = function () {
          //todo: make sure https is used
          $scope.saving = true;
          $http.post('/pw/save', {
            password: $scope.password,
            id: $scope.id,
            data: $scope.credentialsList.filter(function(cred) { return !cred.removed })
          }).then(function(response) {
            $scope.notify('Save successful');
            $scope.saving = false;
            $scope.credentialsList = angular.copy(response.data);
            $scope.canonicalData = angular.copy(response.data);
            $scope.form.$setPristine();
            $scope.unsavedChanges = false;
          }, function(response) {
            $scope.notify(reponse.data.error);
            $scope.saving = false;
          });
        };

        $scope.notify = function(message, duration = 3000) {
          $scope.notification = message;
          setTimeout(function(scope) { return function() { scope.notification = '';scope.$apply() } }($scope), duration);
        };

        $scope.$watch(function(){ return $scope.credentialsList }, function(newVal, oldVal) {
          if(!newVal) return;
          if(!oldVal) return;
          $scope.unsavedChanges = false;
          for (var i = 0; i < (newVal.length > $scope.canonicalData.length ? newVal.length : $scope.canonicalData.length); i++) {
            if (angular.equals(newVal[i], $scope.canonicalData[i])) {
              $scope.form['form_'+i].$setPristine();
            } else {
              $scope.unsavedChanges = true;
            }
          }
          if (!$scope.unsavedChanges) $scope.form.$setPristine();
        }, true);

        $scope.shouldShow = function(creds) {
          if ($scope.filter && $scope.filter.length > 0) {
            return creds.identity.toLowerCase().indexOf($scope.filter.toLowerCase()) >= 0 ||
              creds.note.toLowerCase().indexOf($scope.filter.toLowerCase()) >= 0;
          } else {
            return true;
          }
        };

        $scope.reset = function(index) {
          if ($scope.canonicalData[index]) {
            $scope.credentialsList[index].identity = $scope.canonicalData[index].identity;
            $scope.credentialsList[index].secret = $scope.canonicalData[index].secret;
            $scope.credentialsList[index].note = $scope.canonicalData[index].note;
            delete $scope.credentialsList[index].removed;
          } else {
            $scope.credentialsList[index].identity = '';
            $scope.credentialsList[index].secret = '';
            $scope.credentialsList[index].note = '';
          }
        };

        $scope.remove = function(index) {
          if ($scope.canonicalData[index]) {
            $scope.credentialsList[index].removed = true;
          } else {
            $scope.credentialsList = $scope.credentialsList.slice(0, index).concat($scope.credentialsList.slice(index + 1, $scope.credentialsList.length));
          }
        };
      });
    </script>
  </body>
</html>
